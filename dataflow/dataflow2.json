{
	"name": "dataflow2",
	"properties": {
		"type": "MappingDataFlow",
		"typeProperties": {
			"sources": [
				{
					"dataset": {
						"referenceName": "dataflowdept",
						"type": "DatasetReference"
					},
					"name": "dept"
				},
				{
					"dataset": {
						"referenceName": "dataflowemp",
						"type": "DatasetReference"
					},
					"name": "emp"
				}
			],
			"sinks": [
				{
					"dataset": {
						"referenceName": "AzureSqlTable1",
						"type": "DatasetReference"
					},
					"name": "sink1"
				},
				{
					"dataset": {
						"referenceName": "AzureSqlTable1",
						"type": "DatasetReference"
					},
					"name": "sink2"
				}
			],
			"transformations": [
				{
					"name": "Renaming"
				},
				{
					"name": "AddingTargetrevenue"
				},
				{
					"name": "join1"
				},
				{
					"name": "select1"
				}
			],
			"scriptLines": [
				"source(output(",
				"          dept_id as integer,",
				"          dname as string,",
				"          totalrevenue as integer",
				"     ),",
				"     allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     ignoreNoFilesFound: false) ~> dept",
				"source(output(",
				"          empid as integer,",
				"          ename as string,",
				"          salary as integer,",
				"          did as integer",
				"     ),",
				"     allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     ignoreNoFilesFound: false) ~> emp",
				"emp select(mapColumn(",
				"          eid = empid,",
				"          ename,",
				"          salary,",
				"          did",
				"     ),",
				"     skipDuplicateMapInputs: true,",
				"     skipDuplicateMapOutputs: true) ~> Renaming",
				"dept derive(TargetRevenue = totalrevenue+(totalrevenue*20/100),",
				"          dname = initCap(dname)) ~> AddingTargetrevenue",
				"Renaming, AddingTargetrevenue join(did == dept_id,",
				"     joinType:'inner',",
				"     matchType:'exact',",
				"     ignoreSpaces: false,",
				"     broadcast: 'auto')~> join1",
				"join1 select(mapColumn(",
				"          eid,",
				"          ename,",
				"          salary,",
				"          dname",
				"     ),",
				"     skipDuplicateMapInputs: true,",
				"     skipDuplicateMapOutputs: true) ~> select1",
				"select1 sink(allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     deletable:false,",
				"     insertable:true,",
				"     updateable:false,",
				"     upsertable:false,",
				"     format: 'table',",
				"     skipDuplicateMapInputs: true,",
				"     skipDuplicateMapOutputs: true,",
				"     errorHandlingOption: 'stopOnFirstError',",
				"     mapColumn(",
				"          eid,",
				"          ename,",
				"          salary,",
				"          dname",
				"     )) ~> sink1",
				"AddingTargetrevenue sink(allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     deletable:false,",
				"     insertable:true,",
				"     updateable:false,",
				"     upsertable:false,",
				"     format: 'table',",
				"     skipDuplicateMapInputs: true,",
				"     skipDuplicateMapOutputs: true,",
				"     errorHandlingOption: 'stopOnFirstError',",
				"     mapColumn(",
				"          dept_id,",
				"          dname,",
				"          Totalrevenue = totalrevenue,",
				"          tragetrevenue = TargetRevenue",
				"     )) ~> sink2"
			]
		}
	}
}